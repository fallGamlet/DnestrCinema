/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.6.1'
versions.googleServices = "4.2.0"
versions.playServiceAuth='17.0.0'
versions.playServiceStats = "17.0.0"
versions.playServiceLocation = "16.0.0"
versions.playServiceMap = "16.0.0"
versions.androidMapUtils = "0.6.2"
versions.androidMapServices = "0.9.3"
versions.apache_commons = "2.5"
versions.arch_core = "2.0.0"
versions.atsl_rules = "1.1.0-alpha4"
versions.atsl_runner = "1.1.0-alpha4"
versions.constraint_layout = '2.0.0-beta4'
versions.core_ktx = '1.2.0-rc01'
versions.dagger = "2.27"
versions.dexmaker = "2.2.0"
versions.espresso = '3.3.0-alpha03'
versions.glide = "4.9.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.70"
versions.lifecycle = '2.1.0'
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.22.0"
versions.mockwebserver = "3.8.1"
versions.navigation = "2.1.0-alpha02"
versions.gson = "2.8.6"
versions.okhttp = "3.12.3"
versions.retrofit = "2.6.1"
versions.socket_io = "1.0.0"
versions.timeThreetenabp = "1.1.1"
versions.paging = "2.1.0-rc01"
versions.room = "2.1.0-alpha03"
versions.rx_android = "2.1.1"
versions.rxjava2 = "2.2.16"
versions.rxKotlin2 = "2.4.0"
versions.support = '1.1.0'
versions.timber = "4.5.1"
versions.work = "1.0.0"
versions.palette_ktx = "1.0.0"
versions.multidex = "2.0.1"
versions.vectordrawable = '1.1.0'
versions.vectordrawable_animated = '1.1.0'
versions.firebase_core = '17.2.1'
versions.firebase_messaging = "20.0.0"
versions.firebase_ui_auth = "4.2.0"
versions.firebase_auth = "19.0.0"
versions.facebook = "[5,6]"
versions.vk_sdk="2.1.0"
versions.keyboardvisibilityevent = "2.3.0"
versions.slidingUpPanel = "3.4.0"
versions.jsoup = "1.11.3"
versions.flexbox = "2.0.0"
versions.butterKnife = "9.0.0"
versions.butterKnifeX = "10.1.0"

def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:1.1.0-rc01"
support.v4 = "androidx.legacy:legacy-support-v4:1.0.0"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_ktx = "androidx.fragment:fragment-ktx:$versions.core_ktx"
support.palette_ktx = "androidx.palette:palette-ktx:$versions.palette_ktx"
support.multidex = "androidx.multidex:multidex:$versions.multidex"
support.vectordrawable = "androidx.vectordrawable:vectordrawable:$versions.vectordrawable"
support.vectordrawable_animated = "androidx.vectordrawable:vectordrawable-animated:$versions.vectordrawable_animated"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.simplexml = "com.squareup.retrofit2:converter-simplexml:$versions.retrofit"
retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

deps.okhttp = "com.squareup.okhttp3:okhttp:${versions.okhttp}"
deps.okhttp_urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:${versions.okhttp}"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
deps.socket_io = "io.socket:socket.io-client:${versions.socket_io}"
deps.gson = "com.google.code.gson:gson:${versions.gson}"
deps.simple_xml = "org.simpleframework:simple-xml:2.7.1"
deps.javax_annotation_api = "javax.annotation:javax.annotation-api:1.3.2"

deps.timeThreetenabp = "com.jakewharton.threetenabp:threetenabp:${versions.timeThreetenabp}"


def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_kotlin2 = "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.google_services = "com.google.gms:google-services:${versions.googleServices}"
deps.play_services_auth = "com.google.android.gms:play-services-auth:${versions.playServiceAuth}"
deps.play_services_stats = "com.google.android.gms:play-services-stats:${versions.playServiceStats}"
deps.play_services_flags = "com.google.android.gms:play-services-flags:${versions.playServiceStats}"
deps.play_services_location = "com.google.android.gms:play-services-location:${versions.playServiceLocation}"
deps.play_services_places = "com.google.android.gms:play-services-places:${versions.playServiceLocation}"
deps.play_services_maps = "com.google.android.gms:play-services-maps:${versions.playServiceMap}"
deps.android_maps_services = "com.google.maps:google-maps-services:${versions.androidMapServices}"
deps.android_maps_utils = "com.google.maps.android:android-maps-utils:${versions.androidMapUtils}"

deps.facebook = "com.facebook.android:facebook-login:${versions.facebook}"
deps.vk_sdk = "com.vk:androidsdk:${versions.vk_sdk}"
deps.keyboardvisibilityevent = "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:${versions.keyboardvisibilityevent}"
deps.android_reactive_location2 = "pl.charmas.android:android-reactive-location2:2.1@aar"
deps.sliding_up_panel = "com.sothree.slidinguppanel:library:${versions.slidingUpPanel}"
deps.jsoup = "org.jsoup:jsoup:${versions.jsoup}"
deps.flexbox = "com.google.android:flexbox:${versions.flexbox}"

def butterKnife = [:]
butterKnife.runtime = "com.jakewharton:butterknife:${versions.butterKnife}"
butterKnife.compiler = "com.jakewharton:butterknife-compiler:${versions.butterKnife}"
deps.butterKnife = butterKnife

def butterKnifeX = [:]
butterKnifeX.runtime = "com.jakewharton:butterknife:${versions.butterKnifeX}"
butterKnifeX.compiler = "com.jakewharton:butterknife-compiler:${versions.butterKnifeX}"
deps.butterKnifeX = butterKnifeX

ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 16
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
work.work_rxjava2 = "android.arch.work:work-rxjava2:$versions.work"
deps.work = work

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:${versions.firebase_core}"
firebase.messaging = "com.google.firebase:firebase-messaging:${versions.firebase_messaging}"
firebase.ui_auth = "com.firebaseui:firebase-ui-auth:${versions.firebase_ui_auth}"
firebase.auth = "com.google.firebase:firebase-auth:${versions.firebase_auth}"
deps.firebase = firebase


def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}
ext.addRepos = this.&addRepos
